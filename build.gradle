import com.matyrobbrt.gml.buildscript.JarInJarTask
import com.matyrobbrt.gml.buildscript.JiJPlugin
import com.matyrobbrt.gml.buildscript.transform.JiJDependencyFixerTransformer
import com.matyrobbrt.gml.buildscript.util.JiJUtils

plugins {
    id 'groovy'
    id 'maven-publish'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.github.johnrengelman.shadow' version '7.1.2' apply false
}

archivesBaseName = 'gml'
group = 'com.matyrobbrt.gml'

project.ext.groovyLibs = [
        'stdlib', 'contracts', 'datetime',
        'nio', 'macro', 'macro-library',
        'templates', 'typecheckers',

        'dateutil', 'ginq',

        'toml', 'json'
]

new JiJPlugin().apply(project)

apply from: 'gradle/projectSetup.gradle'
apply from: 'gradle/mdg.gradle'
apply from: 'gradle/jars.gradle'
apply from: 'gradle/compiler.gradle'
apply from: 'gradle/minecraft.gradle'
apply from: 'gradle/publishing.gradle'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

allprojects {
    afterEvaluate {
        license {
            header = rootProject.file('license-header.txt')
            exclude('**/mods.groovy')
        }
    }
}

repositories {
    maven {
        name = 'Modding Inquisition Snapshots'
        url = 'https://maven.moddinginquisition.org/snapshots'
    }
    maven { url = 'https://maven.moddinginquisition.org/releases' }
}

jij.onConfiguration('groovy') {
    final manifestFix = new JiJDependencyFixerTransformer(modType: 'LIBRARY', modulePrefix: 'com.matyrobbrt.gml.groovyjij')
    eachMatching('.+') {
        versionRange nextMajor
        transform manifestFix
    }
}

jij.onConfiguration('modsDotGroovy') {
    eachMatching('.+') {
        path = 'mdg-dsl.jar'
        includeMetadata = false
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    project.ext.groovyLibs.each {
        groovy groovyDep(it)
    }

    transformCompileOnly sourceSets.main.output

    testCompileOnly sourceSets.main.output
    testCompileOnly modsDotGroovy.mdgDsl()

    modCompileOnly sourceSets.main.output

    compileOnly 'com.matyrobbrt.enhancedgroovy:dsl:0.1.0'
    include("io.github.groovymc.cgl:cgl-${mc_version}-forge:${cgl_version}") {
        jij.onDependency(it) {
            versionRange nextMajor
        }
    }
}

String groovyDep(String name) {
    return "${groovyId(name)}:${project.groovy_version}"
}

static String groovyId(String name) {
    return "org.apache.groovy:groovy${name == 'stdlib' ? '' : '-' + name}"
}

tasks.register('makeReadme', Copy) {
    final groovyLibsAsString = project.ext.groovyLibs.join(', ')
    final expands = [
            'groovyVersion': project.groovy_version,
            'groovyLibs': groovyLibsAsString,

            'gmlVersion': '${gmlVersion}', // Thanks Gradle...
            'header': '<!-- This file is automatically generated, make any modifications to it in the `templates/README.MD` file, and then run the `makeReadme` Gradle task -->'
    ]
    it.inputs.properties expands

    it.from('templates/README.MD') {
        expand expands
    }
    it.destinationDir(project.rootDir)
}