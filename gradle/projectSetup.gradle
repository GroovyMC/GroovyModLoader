configurations {
    globalCompile
    compileOnly.extendsFrom(globalCompile)
    transformCompileOnly.extendsFrom(globalCompile)
    testCompileOnly.extendsFrom(globalCompile)
    modCompileOnly.extendsFrom(globalCompile)
    extensionCompileOnly.extendsFrom(globalCompile)

    globalAP
    annotationProcessor.extendsFrom(globalAP)
    transformAnnotationProcessor.extendsFrom(globalAP)
    testAnnotationProcessor.extendsFrom(globalAP)
    modAnnotationProcessor.extendsFrom(globalAP)

    groovy
    globalCompile.extendsFrom(groovy)

    include
    includeLibrary
}

sourceSets {
    transform {
        compileClasspath += configurations.getByName('minecraft')
    }
    extension {
        compileClasspath += configurations.getByName('minecraft')
    }
    test {
        groovy {
            compileClasspath += extension.output
        }
        compileClasspath += transform.output
    }
    mod {
        groovy {
            compileClasspath += extension.output
        }
        compileClasspath += transform.output
        compileClasspath += configurations.getByName('minecraft')
    }
}

// GML is written in pure Groovy, so delete the empty java folder in each of the sourceSets
sourceSets.each { sourceSet ->
    final javaDir = file("src/${sourceSet.name}/java/")
    javaDir.deleteDir()
}